// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id           String   @id @default(uuid())
  nome         String
  telefone     String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  contas        Conta[]         @relation("CriadorDasContas")
  participacoes Participante[]
  notificacoes  Notificacao[]
}

model Conta {
  id              String    @id @default(uuid())
  nome            String
  valor_total     Decimal   @db.Decimal(10, 2)
  data_vencimento DateTime
  chave_pix       String
  criador_id      String
  createdAt       DateTime  @default(now())

  criador         Usuario   @relation("CriadorDasContas", fields: [criador_id], references: [id])
  participantes   Participante[]
  notificacoes    Notificacao[]
}

model Participante {
  id             String          @id @default(uuid())
  conta_id       String
  usuario_id     String
  valor_dividido Decimal         @db.Decimal(10, 2)
  status         StatusPagamento @default(PENDENTE)
  data_pagamento DateTime?

  conta   Conta   @relation(fields: [conta_id], references: [id])
  usuario Usuario @relation(fields: [usuario_id], references: [id])
}

model Notificacao {
  id         String            @id @default(uuid())
  conta_id   String
  usuario_id String
  status     StatusNotificacao @default(PENDENTE)
  data_envio DateTime?

  conta   Conta   @relation(fields: [conta_id], references: [id])
  usuario Usuario @relation(fields: [usuario_id], references: [id])
}

enum StatusPagamento {
  PENDENTE
  CONFIRMADO
}

enum StatusNotificacao {
  PENDENTE
  CONFIRMADO
  FALHOU
}